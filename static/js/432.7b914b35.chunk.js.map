{"version":3,"file":"static/js/432.7b914b35.chunk.js","mappings":"6HACA,EAAwB,qBAAxB,EAAuD,uB,aCKvD,MASA,EATkBA,KAEVC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,I,69FAAgBC,IAAI,WACzBF,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAeC,SAAC,4B,qFCRnC,MAAMI,EAAuBA,CAChCC,EACAC,KAEA,MAAMC,EAAuB,IAAIC,IAEjC,OAAOH,EACFI,QAAQC,IACL,MAAMC,EACW,SAAbL,EAAsBI,EAAWE,KAAOF,EAAWG,SACvD,OAAKN,EAAqBO,IAAIH,KAC1BJ,EAAqBQ,IAAIJ,IAClB,EAEC,IAEfK,KAAKN,GACW,SAAbJ,EAAsBI,EAAWE,KAAOF,EAAWG,UACtD,ECnBT,EAA0B,4BAA1B,EAA8D,0BAA9D,EAA+F,yBAA/F,EAAsI,gCAAtI,EAAkL,8BAAlL,EAAgO,kCAAhO,EAA0Q,0B,aCW1Q,MA8DA,EA9DwCI,IAA4B,IAA3B,kBAAEC,GAAmBD,EAC1D,MAAME,EAAwBf,EAC1Bc,EAAkBE,oBAClB,QAEEC,EAA4BjB,EAC9Bc,EAAkBE,oBAClB,YAGJ,OACIvB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SAAEkB,EAAkBI,SAChDzB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OACIC,IAAKgB,EAAkBK,MACvBpB,IAAKe,EAAkBI,SAE3BzB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAiBC,SAC3BmB,EAAsBH,KAAKQ,IACxBvB,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CACDC,GAAE,8BAAAC,OAAgCH,GAAiBxB,SAElDwB,KAJAA,QASjB3B,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAqBC,SAC/BqB,EAA0BL,KACtBY,IACG3B,EAAAA,EAAAA,KAAA,MAAAD,SACK4B,GADIA,iBASjC/B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJC,EAAAA,EAAAA,KAAA,KACI4B,wBAAyB,CACrBC,OAAQZ,EAAkBa,YAGlC9B,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJC,EAAAA,EAAAA,KAAA,KACI4B,wBAAyB,CACrBC,OAAQZ,EAAkBc,qBAIpC,E,aC7Dd,MAoBA,EApB8BC,KAC1B,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,OAEf,KAAEC,EAAI,UAAEC,EAAS,QAAEC,IAAYC,EAAAA,EAAAA,IAAsBL,GAErDM,EAAoBJ,IAASE,EAEnC,OACIrC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,YAAWE,SACrBqC,GACGpC,EAAAA,EAAAA,KAACwC,EAAAA,EAAO,IACRD,GACAvC,EAAAA,EAAAA,KAACyC,EAAU,CAACxB,kBAAmBkB,KAE/BnC,EAAAA,EAAAA,KAACL,EAAAA,EAAK,KAER,C","sources":["webpack://recipe-app/./src/components/error/Error.module.css?96a2","components/error/Error.tsx","helpers/getUniqueIngredients.ts","webpack://recipe-app/./src/components/recipeInfo/RecipeInfo.module.css?a59d","components/recipeInfo/RecipeInfo.tsx","pages/RecipeInstruction.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__lnYi7\",\"caption\":\"Error_caption__8Mr0d\"};","import { FC } from 'react';\r\n\r\nimport errorIcon from 'assets/error.png';\r\n\r\nimport styles from './Error.module.css';\r\n\r\nconst Error: FC = () => {\r\n    return (\r\n        <div className={styles.error}>\r\n            <img src={errorIcon} alt=\"error\" />\r\n            <p className={styles.caption}>An error has occurred</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n","import { IIngredient } from 'types/receipe/receipe';\r\n\r\nexport const getUniqueIngredients = (\r\n    ingredients: IIngredient[],\r\n    property: 'name' | 'original'\r\n) => {\r\n    const uniqueIngredientsSet = new Set<string>();\r\n\r\n    return ingredients\r\n        .filter((ingredient) => {\r\n            const value =\r\n                property === 'name' ? ingredient.name : ingredient.original;\r\n            if (!uniqueIngredientsSet.has(value)) {\r\n                uniqueIngredientsSet.add(value);\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n        .map((ingredient) =>\r\n            property === 'name' ? ingredient.name : ingredient.original\r\n        );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"RecipeInfo_wrapper__vIerH\",\"title\":\"RecipeInfo_title__i9mfN\",\"info\":\"RecipeInfo_info__7rpOA\",\"instruction\":\"RecipeInfo_instruction__fJY69\",\"name_list\":\"RecipeInfo_name_list__xGJEQ\",\"original_list\":\"RecipeInfo_original_list__Dd9qn\",\"about\":\"RecipeInfo_about__pNuiD\"};","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { IRecipe } from 'types/receipe/receipe';\r\nimport { getUniqueIngredients } from 'helpers/getUniqueIngredients';\r\n\r\nimport styles from './RecipeInfo.module.css';\r\n\r\ninterface RecipeInfoProps {\r\n    recipeInstruction: IRecipe;\r\n}\r\n\r\nconst RecipeInfo: FC<RecipeInfoProps> = ({ recipeInstruction }) => {\r\n    const uniqueNameIngredients = getUniqueIngredients(\r\n        recipeInstruction.extendedIngredients,\r\n        'name'\r\n    );\r\n    const uniqueOriginalIngredients = getUniqueIngredients(\r\n        recipeInstruction.extendedIngredients,\r\n        'original'\r\n    );\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <h2 className={styles.title}>{recipeInstruction.title}</h2>\r\n            <div className={styles.info}>\r\n                <img\r\n                    src={recipeInstruction.image}\r\n                    alt={recipeInstruction.title}\r\n                />\r\n                <div className={styles.instruction}>\r\n                    <ul className={styles.name_list}>\r\n                        {uniqueNameIngredients.map((ingredientName) => (\r\n                            <li key={ingredientName}>\r\n                                <Link\r\n                                    to={`/recipes/findByIngredients/${ingredientName}`}\r\n                                >\r\n                                    {ingredientName}\r\n                                </Link>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <div>\r\n                        <h3>Ingredients Count:</h3>\r\n                        <ul className={styles.original_list}>\r\n                            {uniqueOriginalIngredients.map(\r\n                                (ingredientOriginal) => (\r\n                                    <li key={ingredientOriginal}>\r\n                                        {ingredientOriginal}\r\n                                    </li>\r\n                                )\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.about}>\r\n                <h3>Description</h3>\r\n                <p\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: recipeInstruction.summary,\r\n                    }}\r\n                ></p>\r\n                <h3>Instruction</h3>\r\n                <p\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: recipeInstruction.instructions,\r\n                    }}\r\n                ></p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecipeInfo;\r\n","import { FC } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Loading from 'components/loading/Loading';\r\nimport Error from 'components/error/Error';\r\nimport RecipeInfo from 'components/recipeInfo/RecipeInfo';\r\n\r\nimport { useGetRecipeInfoQuery } from 'services/FoodService';\r\n\r\nconst RecipeInstruction: FC = () => {\r\n    const { recipeId } = useParams();\r\n\r\n    const { data, isLoading, isError } = useGetRecipeInfoQuery(recipeId!);\r\n\r\n    const hasDataAndNoError = data && !isError;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : hasDataAndNoError ? (\r\n                <RecipeInfo recipeInstruction={data} />\r\n            ) : (\r\n                <Error />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecipeInstruction;\r\n"],"names":["Error","_jsxs","className","styles","children","_jsx","src","alt","getUniqueIngredients","ingredients","property","uniqueIngredientsSet","Set","filter","ingredient","value","name","original","has","add","map","_ref","recipeInstruction","uniqueNameIngredients","extendedIngredients","uniqueOriginalIngredients","title","image","ingredientName","Link","to","concat","ingredientOriginal","dangerouslySetInnerHTML","__html","summary","instructions","RecipeInstruction","recipeId","useParams","data","isLoading","isError","useGetRecipeInfoQuery","hasDataAndNoError","Loading","RecipeInfo"],"sourceRoot":""}