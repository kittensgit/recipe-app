{"version":3,"file":"static/js/948.ccf50ddb.chunk.js","mappings":"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","sources":["webpack://recipe-app/./src/components/error/Error.module.css?96a2","components/error/Error.tsx","webpack://recipe-app/./src/components/search/Seacrh.module.css?b3fe","components/search/Search.tsx","helpers/capitalize.ts","webpack://recipe-app/./src/components/recipeSplideCards/recipeSplideCard/RecipeSplideCard.module.css?a992","components/recipeSplideCards/recipeSplideCard/RecipeSplideCard.tsx","webpack://recipe-app/./src/components/recipeSplideCards/RecipeSplideCards.module.css?595a","components/recipeSplideCards/RecipeSplideCards.tsx","pages/Home.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__lnYi7\",\"caption\":\"Error_caption__8Mr0d\"};","import { FC } from 'react';\r\n\r\nimport errorIcon from 'assets/error.png';\r\n\r\nimport styles from './Error.module.css';\r\n\r\nconst Error: FC = () => {\r\n    return (\r\n        <div className={styles.error}>\r\n            <img src={errorIcon} alt=\"error\" />\r\n            <p className={styles.caption}>An error has occurred</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"Seacrh_search__1eQyE\"};","import React, { FC, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport styles from './Seacrh.module.css';\r\n\r\nconst Search: FC = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [search, setSearch] = useState<string>('');\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n    };\r\n\r\n    const handleEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            if (search) {\r\n                navigate(`/recipes/searched/${search}`);\r\n                setSearch('');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.search}>\r\n            <input\r\n                value={search}\r\n                onChange={handleChange}\r\n                onKeyDown={handleEnter}\r\n                placeholder=\"Enter a dish name\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","export const capitalize = (str: string) =>\r\n    str.charAt(0).toUpperCase() + str.slice(1);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"RecipeSplideCard_card__ixea3\",\"recipe_img\":\"RecipeSplideCard_recipe_img__mH5Vq\",\"caption_wrap\":\"RecipeSplideCard_caption_wrap__LtUQd\",\"caption\":\"RecipeSplideCard_caption__ywhJo\"};","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { IRecipe } from 'types/receipe/receipe';\r\n\r\nimport triangle from 'assets/triangle.png';\r\n\r\nimport styles from './RecipeSplideCard.module.css';\r\n\r\ninterface RecipeSplideCardProps {\r\n    recipe: IRecipe;\r\n}\r\n\r\nconst RecipeSplideCard: FC<RecipeSplideCardProps> = ({ recipe }) => {\r\n    return (\r\n        <div className={styles.card}>\r\n            {recipe.image && (\r\n                <img\r\n                    className={styles.recipe_img}\r\n                    src={recipe.image}\r\n                    alt={recipe.title}\r\n                />\r\n            )}\r\n            <Link to={`/instruction/${recipe.id}`}>\r\n                <div className={styles.caption_wrap}>\r\n                    <img src={triangle} alt=\"triangle\" />\r\n                    <span className={styles.caption}>{recipe.title}</span>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecipeSplideCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"RecipeSplideCards_wrapper__asiTj\",\"title\":\"RecipeSplideCards_title__3Qqsk\"};","import { FC, useEffect, useState } from 'react';\r\nimport { Splide, SplideSlide } from '@splidejs/react-splide';\r\nimport '@splidejs/react-splide/css';\r\n\r\nimport { IRecipe } from 'types/receipe/receipe';\r\n\r\nimport RecipeSplideCard from './recipeSplideCard/RecipeSplideCard';\r\n\r\nimport styles from './RecipeSplideCards.module.css';\r\n\r\ninterface RecipeSplideCardsProps {\r\n    title?: string;\r\n    recipes: IRecipe[];\r\n    countPage: number;\r\n}\r\n\r\nconst RecipeSplideCards: FC<RecipeSplideCardsProps> = ({\r\n    title,\r\n    recipes,\r\n    countPage,\r\n}) => {\r\n    const [perPage, setPerPage] = useState(countPage);\r\n\r\n    useEffect(() => {\r\n        const updatePerPage = () => {\r\n            const newPerPage =\r\n                window.innerWidth < 500\r\n                    ? 1\r\n                    : window.innerWidth < 760\r\n                    ? 2\r\n                    : window.innerWidth < 900\r\n                    ? 3\r\n                    : countPage;\r\n\r\n            setPerPage(newPerPage);\r\n        };\r\n        updatePerPage();\r\n        window.addEventListener('resize', updatePerPage);\r\n        return () => {\r\n            window.removeEventListener('resize', updatePerPage);\r\n        };\r\n    }, [countPage]);\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {title && <h2 className={styles.title}>{title}</h2>}\r\n            <Splide\r\n                options={{\r\n                    rewind: true,\r\n                    perPage: perPage,\r\n                    perMove: perPage,\r\n                    arrows: false,\r\n                    pagination: false,\r\n                    drag: 'free',\r\n                    gap: '1rem',\r\n                    speed: 500,\r\n                }}\r\n            >\r\n                {recipes.map((recipe) => (\r\n                    <SplideSlide key={recipe.id}>\r\n                        <RecipeSplideCard recipe={recipe} />\r\n                    </SplideSlide>\r\n                ))}\r\n            </Splide>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecipeSplideCards;\r\n","import { FC } from 'react';\r\n\r\nimport Loading from 'components/loading/Loading';\r\nimport Error from 'components/error/Error';\r\nimport Search from 'components/search/Search';\r\nimport RecipeSplideCards from 'components/recipeSplideCards/RecipeSplideCards';\r\n\r\nimport { useGetPopularByTagQuery } from 'services/FoodService';\r\nimport { capitalize } from 'helpers/capitalize';\r\n\r\nconst tags = [\r\n    '',\r\n    'dessert',\r\n    'vegetarian',\r\n    'vegan',\r\n    'ketogenic',\r\n    'nut_free',\r\n    'wheat_free',\r\n    'gluten_free',\r\n    'no_added_sugar',\r\n];\r\n\r\nconst Home: FC = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <Search />\r\n            {tags.map((tag) => RenderRecipeSplideCards(tag))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst RenderRecipeSplideCards = (tag: string) => {\r\n    const { data, isLoading, isError } = useGetPopularByTagQuery(tag);\r\n\r\n    if (isLoading) {\r\n        return <Loading key={tag} />;\r\n    }\r\n\r\n    if (isError || !data) {\r\n        return <Error key={tag} />;\r\n    }\r\n\r\n    return (\r\n        <RecipeSplideCards\r\n            key={tag}\r\n            title={tag ? capitalize(tag).split('_').join(' ') : 'Most popular'}\r\n            recipes={data.recipes}\r\n            countPage={4}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["Error","_jsxs","className","styles","children","_jsx","src","alt","Search","navigate","useNavigate","search","setSearch","useState","value","onChange","e","target","onKeyDown","key","concat","placeholder","capitalize","str","charAt","toUpperCase","slice","_ref","recipe","image","title","Link","to","id","recipes","countPage","perPage","setPerPage","useEffect","updatePerPage","newPerPage","window","innerWidth","addEventListener","removeEventListener","Splide","options","rewind","perMove","arrows","pagination","drag","gap","speed","map","SplideSlide","RecipeSplideCard","tags","RenderRecipeSplideCards","tag","data","isLoading","isError","useGetPopularByTagQuery","Loading","RecipeSplideCards","split","join","Home"],"sourceRoot":""}