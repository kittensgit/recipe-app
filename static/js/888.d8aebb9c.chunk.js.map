{"version":3,"file":"static/js/888.d8aebb9c.chunk.js","mappings":"6HACA,EAAwB,qBAAxB,EAAuD,uB,aCKvD,MASA,EATkBA,KAEVC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,I,69FAAgBC,IAAI,WACzBF,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAeC,SAAC,4B,sDCT1C,QAAuB,yBAAvB,EAA0D,4B,aCU1D,MAWA,EAXwCI,IAAiB,IAAhB,OAAEC,GAAQD,EAC/C,OACIP,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKG,EAAOC,MAAOH,IAAKE,EAAOE,SACpCN,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,GAAE,gBAAAC,OAAkBL,EAAOM,IAAKX,UAClCC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAeC,SAAEK,EAAOE,YAE3C,ECjBd,EAAwB,2BAAxB,EAA2D,2BC0B3D,EAb0CH,IAAyB,IAAxB,QAAEQ,EAAO,MAAEL,GAAOH,EACzD,OACIP,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SAAEO,IAASM,EAAAA,EAAAA,GAAWN,MAClDN,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAaC,SACxBY,EAAQE,KAAKT,IACVJ,EAAAA,EAAAA,KAACc,EAAU,CAAiBV,OAAQA,GAAnBA,EAAOM,UAG9B,C,sDCtBd,QAAyB,uB,aCIzB,MA8BA,EA9BmBK,KACf,MAAMC,GAAWC,EAAAA,EAAAA,OAEVC,EAAQC,IAAaC,EAAAA,EAAAA,UAAiB,IAe7C,OACIpB,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAcC,UAC1BC,EAAAA,EAAAA,KAAA,SACIqB,MAAOH,EACPI,SAjBUC,IAClBJ,EAAUI,EAAEC,OAAOH,MAAM,EAiBjBI,UAdSF,IACH,UAAVA,EAAEG,KACER,IACAF,EAAS,qBAADP,OAAsBS,IAC9BC,EAAU,IAElB,EASQQ,YAAY,uBAEd,C,iCC/BP,MAAMf,EAAcgB,GACvBA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,E,iHCS5C,MAwBA,EAxBqBC,KACjB,MAAM,YAAEC,IAAgBC,EAAAA,EAAAA,OAElB,KAAEC,EAAI,UAAEC,EAAS,QAAEC,IAAYC,EAAAA,EAAAA,IACjCL,GAGEM,EAAoBJ,IAASE,EACnC,OACIrC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,YAAWE,SACrBqC,GACGpC,EAAAA,EAAAA,KAACwC,EAAAA,EAAO,IACRD,GACA3C,EAAAA,EAAAA,MAAA6C,EAAAA,SAAA,CAAA1C,SAAA,EACIC,EAAAA,EAAAA,KAACe,EAAAA,EAAM,KACPf,EAAAA,EAAAA,KAAC0C,EAAAA,EAAW,CAAC/B,QAASwB,EAAKQ,QAASrC,MAAO2B,QAG/CjC,EAAAA,EAAAA,KAACL,EAAAA,EAAK,KAER,C","sources":["webpack://recipe-app/./src/components/error/Error.module.css?96a2","components/error/Error.tsx","webpack://recipe-app/./src/components/recipeCards/recipeCard/RecipeCard.module.css?d1c6","components/recipeCards/recipeCard/RecipeCard.tsx","webpack://recipe-app/./src/components/recipeCards/RecipeCards.module.css?d2eb","components/recipeCards/RecipeCards.tsx","webpack://recipe-app/./src/components/search/Seacrh.module.css?b3fe","components/search/Search.tsx","helpers/capitalize.ts","pages/Searched.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__lnYi7\",\"caption\":\"Error_caption__8Mr0d\"};","import { FC } from 'react';\r\n\r\nimport errorIcon from 'assets/error.png';\r\n\r\nimport styles from './Error.module.css';\r\n\r\nconst Error: FC = () => {\r\n    return (\r\n        <div className={styles.error}>\r\n            <img src={errorIcon} alt=\"error\" />\r\n            <p className={styles.caption}>An error has occurred</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"RecipeCard_card__Ei3Ow\",\"caption\":\"RecipeCard_caption__+nuyk\"};","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { IRecipe, ISeacrhRecipe } from 'types/receipe/receipe';\r\n\r\nimport styles from './RecipeCard.module.css';\r\n\r\ninterface RecipeCardProps {\r\n    recipe: IRecipe | ISeacrhRecipe;\r\n}\r\n\r\nconst RecipeCard: FC<RecipeCardProps> = ({ recipe }) => {\r\n    return (\r\n        <div className={styles.card}>\r\n            <img src={recipe.image} alt={recipe.title} />\r\n            <Link to={`/instruction/${recipe.id}`}>\r\n                <span className={styles.caption}>{recipe.title}</span>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecipeCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cards\":\"RecipeCards_cards__N9i+u\",\"title\":\"RecipeCards_title__R4Lt4\"};","import { FC } from 'react';\r\n\r\nimport { IRecipe, ISeacrhRecipe } from 'types/receipe/receipe';\r\nimport { capitalize } from 'helpers/capitalize';\r\n\r\nimport RecipeCard from './recipeCard/RecipeCard';\r\n\r\nimport styles from './RecipeCards.module.css';\r\n\r\ninterface RecipeCardsProps {\r\n    title?: string;\r\n    recipes: IRecipe[] | ISeacrhRecipe[];\r\n}\r\n\r\nconst RecipeCards: FC<RecipeCardsProps> = ({ recipes, title }) => {\r\n    return (\r\n        <div>\r\n            <h2 className={styles.title}>{title && capitalize(title)}</h2>\r\n            <div className={styles.cards}>\r\n                {recipes.map((recipe) => (\r\n                    <RecipeCard key={recipe.id} recipe={recipe} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecipeCards;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"Seacrh_search__1eQyE\"};","import React, { FC, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport styles from './Seacrh.module.css';\r\n\r\nconst Search: FC = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [search, setSearch] = useState<string>('');\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n    };\r\n\r\n    const handleEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            if (search) {\r\n                navigate(`/recipes/searched/${search}`);\r\n                setSearch('');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.search}>\r\n            <input\r\n                value={search}\r\n                onChange={handleChange}\r\n                onKeyDown={handleEnter}\r\n                placeholder=\"Enter a dish name\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","export const capitalize = (str: string) =>\r\n    str.charAt(0).toUpperCase() + str.slice(1);\r\n","import { FC } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Loading from 'components/loading/Loading';\r\nimport Error from 'components/error/Error';\r\nimport RecipeCards from 'components/recipeCards/RecipeCards';\r\nimport Search from 'components/search/Search';\r\n\r\nimport { useGetRecipesBySeacrhQuery } from 'services/FoodService';\r\n\r\nconst Searched: FC = () => {\r\n    const { searchQuery } = useParams();\r\n\r\n    const { data, isLoading, isError } = useGetRecipesBySeacrhQuery(\r\n        searchQuery!\r\n    );\r\n\r\n    const hasDataAndNoError = data && !isError;\r\n    return (\r\n        <div className=\"container\">\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : hasDataAndNoError ? (\r\n                <>\r\n                    <Search />\r\n                    <RecipeCards recipes={data.results} title={searchQuery} />\r\n                </>\r\n            ) : (\r\n                <Error />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Searched;\r\n"],"names":["Error","_jsxs","className","styles","children","_jsx","src","alt","_ref","recipe","image","title","Link","to","concat","id","recipes","capitalize","map","RecipeCard","Search","navigate","useNavigate","search","setSearch","useState","value","onChange","e","target","onKeyDown","key","placeholder","str","charAt","toUpperCase","slice","Searched","searchQuery","useParams","data","isLoading","isError","useGetRecipesBySeacrhQuery","hasDataAndNoError","Loading","_Fragment","RecipeCards","results"],"sourceRoot":""}